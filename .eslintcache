[{"/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/Login.js":"1","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/App.js":"2"},{"size":3401,"mtime":1611441860099,"results":"3","hashOfConfig":"4"},{"size":393,"mtime":1611441845880,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"11ir1dz",{"filePath":"9","messages":"10","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/Login.js",["11","12"],"import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport './style.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInfo: {\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    signInClick = async () => {\n        const email = this.state.userInfo.email;\n        const password = this.state.userInfo.password;\n        console.log(this.state);\n        const URL = 'http://localhost:5000/user/retrieve/' + email;\n        console.log(URL);\n        let body = this.state.userInfo;\n        let headers = new Headers();\n        headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        headers.append(\"Access-Control-Allow-Headers\", \"*\");\n        headers.append(\"Content-Type\", \"application/json\");\n        let options = {\n            method: 'GET',\n            headers: headers\n        }\n\n        let apiResponse = null;\n        await fetch(URL, options)\n        .then(data => data.json())\n        .then(data => apiResponse = data)\n        .catch(err => console.log(err));\n\n        console.log(apiResponse);\n\n        if (apiResponse['password'] === password) {\n            alert('Success');\n        } else {\n            alert('Failure');\n        }\n    }\n\n    onEmailChange = (e) => {\n        const email = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['email'] = email;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n    onPasswordChange = (e) => {\n        const password = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['password'] = password;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n    render() {\n        return (\n<div class=\"container\">\n<a href = \"#\"><img src =\"logo.png\" alt =\"logo\"/></a>\n<h6><a href=\"../index.js\">BACK</a></h6>\n\n\n            <div class = \"sign-up\">\n                <h3>Sign In with Safe Seat</h3>\n\n\n\n            <hr  style={{\n                color: 'blue',\n                backgroundColor: '#000000',\n                height: .9,\n                borderColor : '#000000'\n            }}/>\n\n\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label className= \"label\">Email: *</Form.Label>\n                        <Form.Control onChange={this.onEmailChange} type=\"email\" className=\"input\" placeholder=\"School email\" />\n              \n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label className= \"label\">Password: *</Form.Label>\n                        <Form.Control  onChange={this.onPasswordChange} type=\"password\" className=\"input\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"radio\" className = \"labelBox1\" label=\"Student\" />\n                         <Form.Check type=\"radio\" className = \"labelBox1\" label=\"Professor\" />\n                    </Form.Group>\n                    \n                </Form>\n                <Button variant=\"primary\"  onClick={this.signInClick}  className = \"signup-btn\" type=\"submit\">\n                    Submit!\n                </Button>\n             </div>\n             </div>\n\n\n        );\n    }\n}\n\nexport default Login;","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/App.js",["13","14","15","16","17"],{"ruleId":"18","severity":1,"message":"19","line":22,"column":13,"nodeType":"20","messageId":"21","endLine":22,"endColumn":17},{"ruleId":"22","severity":1,"message":"23","line":68,"column":1,"nodeType":"24","endLine":68,"endColumn":15},{"ruleId":"18","severity":1,"message":"25","line":1,"column":8,"nodeType":"20","messageId":"21","endLine":1,"endColumn":12},{"ruleId":"18","severity":1,"message":"26","line":3,"column":8,"nodeType":"20","messageId":"21","endLine":3,"endColumn":23},{"ruleId":"18","severity":1,"message":"27","line":5,"column":8,"nodeType":"20","messageId":"21","endLine":5,"endColumn":14},{"ruleId":"18","severity":1,"message":"28","line":6,"column":8,"nodeType":"20","messageId":"21","endLine":6,"endColumn":12},{"ruleId":"18","severity":1,"message":"29","line":7,"column":8,"nodeType":"20","messageId":"21","endLine":7,"endColumn":19},"no-unused-vars","'body' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'logo' is defined but never used.","'ClassSeatPicker' is defined but never used.","'SignUp' is defined but never used.","'Main' is defined but never used.","'CreateClass' is defined but never used."]