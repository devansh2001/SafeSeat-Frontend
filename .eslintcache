[{"C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\App.js":"1","C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\components\\Login.js":"2","C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\components\\CreateClass.js":"3","C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\components\\Covid.js":"4","C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\components\\SignUp.js":"5"},{"size":1195,"mtime":1611449015685,"results":"6","hashOfConfig":"7"},{"size":3302,"mtime":1611449015689,"results":"8","hashOfConfig":"7"},{"size":6366,"mtime":1611445987310,"results":"9","hashOfConfig":"7"},{"size":3202,"mtime":1611450136137,"results":"10","hashOfConfig":"7"},{"size":5914,"mtime":1611449015690,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"14","usedDeprecatedRules":"15"},"1imrzlh",{"filePath":"16","messages":"17","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"18","usedDeprecatedRules":"19"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\App.js",["26"],"import logo from './logo.svg';\r\nimport './App.css';\r\nimport ClassSeatPicker from './components/ClassSeatPicker';\r\nimport Login from './components/Login';\r\nimport Covid from './components/Covid';\r\nimport SignUp from './components/SignUp';\r\nimport Main from './components/Main';\r\nimport CreateClass from './components/CreateClass';\r\nimport DashboardProf from './components/DashboardProf';\r\nimport { Router, Route, browserHistory } from 'react-router';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Router history={browserHistory}>\r\n        <Route path='/' component={() => <Main />} />\r\n        <Route path='/main-page' component={() => <Main />} />\r\n          \r\n        <Route path='/sign-up' component={() => <SignUp />} />\r\n        \r\n        <Route path='/login' component={() => <Login />} />\r\n        \r\n        <Route path='/create-class' component={() => <CreateClass />} />\r\n\r\n        <Route path='/pick-seat' component={() => <ClassSeatPicker />} />\r\n\r\n        <Route path='/dashboard' component={() => <DashboardProf />} />\r\n        \r\n        <Route path='/covid' component={() => <Covid />} />\r\n        \r\n      </Router>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n",["27","28"],"C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\components\\Login.js",["29","30"],"import React, { Component } from 'react';\r\nimport { Form, Button } from 'react-bootstrap';\r\nimport './style.css';\r\nimport { browserHistory } from 'react-router';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            userInfo: {\r\n                email: '',\r\n                password: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    signInClick = async () => {\r\n        const email = this.state.userInfo.email;\r\n        const password = this.state.userInfo.password;\r\n        console.log(this.state);\r\n        const URL = 'http://localhost:5000/user/retrieve/' + email;\r\n        console.log(URL);\r\n        let body = this.state.userInfo;\r\n        let headers = new Headers();\r\n        headers.append(\"Access-Control-Allow-Origin\", \"*\");\r\n        headers.append(\"Access-Control-Allow-Headers\", \"*\");\r\n        headers.append(\"Content-Type\", \"application/json\");\r\n        let options = {\r\n            method: 'GET',\r\n            headers: headers\r\n        }\r\n\r\n        let apiResponse = null;\r\n        await fetch(URL, options)\r\n        .then(data => data.json())\r\n        .then(data => apiResponse = data)\r\n        .catch(err => console.log(err));\r\n\r\n        console.log(apiResponse);\r\n\r\n        if (apiResponse['password'] === password) {\r\n            browserHistory.push('/dashboard')\r\n        } else {\r\n            alert('Incorrect credentials');\r\n        }\r\n    }\r\n\r\n    onEmailChange = (e) => {\r\n        const email = e.target.value;\r\n        let userInfo = this.state.userInfo;\r\n        userInfo['email'] = email;\r\n        this.setState({\r\n            userInfo: userInfo\r\n        })\r\n    }\r\n\r\n    onPasswordChange = (e) => {\r\n        const password = e.target.value;\r\n        let userInfo = this.state.userInfo;\r\n        userInfo['password'] = password;\r\n        this.setState({\r\n            userInfo: userInfo\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n<div class=\"container\">\r\n<a href = \"#\"><img src =\"logo.png\" alt =\"logo\"/></a>\r\n<h6><a href=\"../index.js\">BACK</a></h6>\r\n\r\n\r\n            <div class = \"sign-up\">\r\n                <h3>Sign In with Safe Seat</h3>\r\n\r\n\r\n\r\n            <hr  style={{\r\n                color: 'blue',\r\n                backgroundColor: '#000000',\r\n                height: .9,\r\n                borderColor : '#000000'\r\n            }}/>\r\n\r\n\r\n                <Form>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className= \"label\">Email: *</Form.Label>\r\n                        <Form.Control onChange={this.onEmailChange} type=\"email\" className=\"input\" placeholder=\"School email\" />\r\n              \r\n                    </Form.Group>\r\n                    <Form.Group controlId=\"formBasicEmail\">\r\n                        <Form.Label className= \"label\">Password: *</Form.Label>\r\n                        <Form.Control  onChange={this.onPasswordChange} type=\"password\" className=\"input\" placeholder=\"Password\" />\r\n                    </Form.Group>\r\n                    \r\n                </Form>\r\n                <Button variant=\"primary\"  onClick={this.signInClick}  className = \"signup-btn\" type=\"submit\">\r\n                    Submit!\r\n                </Button>\r\n             </div>\r\n             </div>\r\n\r\n\r\n        );\r\n    }\r\n}\r\n\r\nexport default Login;",["31","32"],"C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\components\\CreateClass.js",["33"],"C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\components\\Covid.js",[],"C:\\Users\\yasmi\\OneDrive - Georgia Institute of Technology\\Covid Hackathon - Spring 2021\\SafeSeat-Frontend\\src\\components\\SignUp.js",["34","35"],{"ruleId":"36","severity":1,"message":"37","line":1,"column":8,"nodeType":"38","messageId":"39","endLine":1,"endColumn":12},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","replacedBy":"43"},{"ruleId":"36","severity":1,"message":"44","line":23,"column":13,"nodeType":"38","messageId":"39","endLine":23,"endColumn":17},{"ruleId":"45","severity":1,"message":"46","line":69,"column":1,"nodeType":"47","endLine":69,"endColumn":15},{"ruleId":"40","replacedBy":"48"},{"ruleId":"42","replacedBy":"49"},{"ruleId":"36","severity":1,"message":"50","line":2,"column":27,"nodeType":"38","messageId":"39","endLine":2,"endColumn":30},{"ruleId":"36","severity":1,"message":"51","line":2,"column":24,"nodeType":"38","messageId":"39","endLine":2,"endColumn":27},{"ruleId":"45","severity":1,"message":"46","line":99,"column":13,"nodeType":"47","endLine":99,"endColumn":27},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["52"],"no-negated-in-lhs",["53"],"'body' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement",["52"],["53"],"'Row' is defined but never used.","'Col' is defined but never used.","no-global-assign","no-unsafe-negation"]