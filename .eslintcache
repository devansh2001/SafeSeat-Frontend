[{"/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/Login.js":"1","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/App.js":"2","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/SignUp.js":"3","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/reportWebVitals.js":"4","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/CreateClass.js":"5","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/Main.js":"6"},{"size":3401,"mtime":1611442114389,"results":"7","hashOfConfig":"8"},{"size":1050,"mtime":1611446088436,"results":"9","hashOfConfig":"8"},{"size":5097,"mtime":1611442114391,"results":"10","hashOfConfig":"8"},{"size":362,"mtime":1611359217755,"results":"11","hashOfConfig":"8"},{"size":6183,"mtime":1611441408223,"results":"12","hashOfConfig":"8"},{"size":1061,"mtime":1611442114390,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"16","usedDeprecatedRules":"17"},"11ir1dz",{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"17"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"17"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/Login.js",["31","32"],"import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport './style.css';\n\nclass Login extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInfo: {\n                email: '',\n                password: ''\n            }\n        }\n    }\n\n    signInClick = async () => {\n        const email = this.state.userInfo.email;\n        const password = this.state.userInfo.password;\n        console.log(this.state);\n        const URL = 'http://localhost:5000/user/retrieve/' + email;\n        console.log(URL);\n        let body = this.state.userInfo;\n        let headers = new Headers();\n        headers.append(\"Access-Control-Allow-Origin\", \"*\");\n        headers.append(\"Access-Control-Allow-Headers\", \"*\");\n        headers.append(\"Content-Type\", \"application/json\");\n        let options = {\n            method: 'GET',\n            headers: headers\n        }\n\n        let apiResponse = null;\n        await fetch(URL, options)\n        .then(data => data.json())\n        .then(data => apiResponse = data)\n        .catch(err => console.log(err));\n\n        console.log(apiResponse);\n\n        if (apiResponse['password'] === password) {\n            alert('Success');\n        } else {\n            alert('Failure');\n        }\n    }\n\n    onEmailChange = (e) => {\n        const email = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['email'] = email;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n    onPasswordChange = (e) => {\n        const password = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['password'] = password;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n    render() {\n        return (\n<div class=\"container\">\n<a href = \"#\"><img src =\"logo.png\" alt =\"logo\"/></a>\n<h6><a href=\"../index.js\">BACK</a></h6>\n\n\n            <div class = \"sign-up\">\n                <h3>Sign In with Safe Seat</h3>\n\n\n\n            <hr  style={{\n                color: 'blue',\n                backgroundColor: '#000000',\n                height: .9,\n                borderColor : '#000000'\n            }}/>\n\n\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label className= \"label\">Email: *</Form.Label>\n                        <Form.Control onChange={this.onEmailChange} type=\"email\" className=\"input\" placeholder=\"School email\" />\n              \n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label className= \"label\">Password: *</Form.Label>\n                        <Form.Control  onChange={this.onPasswordChange} type=\"password\" className=\"input\" placeholder=\"Password\" />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"radio\" className = \"labelBox1\" label=\"Student\" />\n                         <Form.Check type=\"radio\" className = \"labelBox1\" label=\"Professor\" />\n                    </Form.Group>\n                    \n                </Form>\n                <Button variant=\"primary\"  onClick={this.signInClick}  className = \"signup-btn\" type=\"submit\">\n                    Submit!\n                </Button>\n             </div>\n             </div>\n\n\n        );\n    }\n}\n\nexport default Login;",["33","34"],"/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/App.js",["35"],"import logo from './logo.svg';\nimport './App.css';\nimport ClassSeatPicker from './components/ClassSeatPicker';\nimport Login from './components/Login';\nimport SignUp from './components/SignUp';\nimport Main from './components/Main';\nimport CreateClass from './components/CreateClass';\nimport DashboardProf from './components/DashboardProf';\nimport { Router, Route, browserHistory } from 'react-router';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router history={browserHistory}>\n        <Route path='/' component={() => <Main />} />\n        <Route path='/main-page' component={() => <Main />} />\n          \n        <Route path='/sign-up' component={() => <SignUp />} />\n        \n        <Route path='/login' component={() => <Login />} />\n        \n        <Route path='/create-class' component={() => <CreateClass />} />\n\n        <Route path='/pick-seat' component={() => <ClassSeatPicker />} />\n\n        <Route path='/dashboard' component={() => <DashboardProf />} />\n        \n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/SignUp.js",["36"],"import React, { Component } from 'react';\nimport { Form, Button } from 'react-bootstrap';\nimport './style.css';\nimport '../index.js';\nimport './logo.png'\n\nclass SignUp extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            userInfo: {\n                email: '',\n                password: '',\n                confirmPassword: '',\n                role: ''\n            }\n        }\n    }\n\n    signUpClick = async () => {\n        console.log(this.state.userInfo);\n        const password = this.state.userInfo.password;\n        const confirmPassword = this.state.userInfo.confirmPassword;\n        if (password !== confirmPassword) {\n            alert('Please ensure that passwords match!');\n        }\n\n        const URL = 'http://localhost:5000/user/add';\n        let body = this.state.userInfo;\n        let headers = new Headers();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json');\n        let options = {\n            method: 'POST',\n            headers: headers,\n            body: JSON.stringify(body)\n        }\n\n        let apiResponse = null;\n        await fetch(URL, options)\n        .then(data => data.json())\n        .then(data => apiResponse = data)\n        .catch(err => console.log(err));\n\n        console.log(apiResponse);\n    }\n\n    onNameChange = (e) => {\n        const name = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['name'] = name;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n    onEmailChange = (e) => {\n        const email = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['email'] = email;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n    onPasswordChange = (e) => {\n        const password = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['password'] = password;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n    onConfirmPasswordChange = (e) => {\n        const confirmPassword = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['confirmPassword'] = confirmPassword;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n    onRoleChange = (e) => {\n        const role = e.target.value;\n        let userInfo = this.state.userInfo;\n        userInfo['role'] = role;\n        this.setState({\n            userInfo: userInfo\n        })\n    }\n\n\n\n\n    render() {\n        return (\n            <div class=\"container\">\n            <a href = \"#\"><img src =\"logo.png\" alt =\"logo\"/></a>\n            <h6><a href=\"../index.js\">BACK</a></h6>\n\n\n                <div class = \"sign-up\">\n                    <h3>Sign Up with Safe Seat</h3>\n\n\n\n                <hr  style={{\n                    color: 'blue',\n                    backgroundColor: '#000000',\n                    height: .9,\n                    borderColor : '#000000'\n                }}/>\n\n\n                    <Form>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label className= \"label\">Name: *</Form.Label>\n                            <Form.Control onChange={this.onNameChange} type=\"text\" className=\"input\" placeholder=\"Name\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label className= \"label\">Email: *</Form.Label>\n                            <Form.Control onChange={this.onEmailChange} type=\"email\" className=\"input\" placeholder=\"School email\" />\n                \n                        </Form.Group>\n                        <Form.Group controlId=\"formBasicEmail\">\n                            <Form.Label className= \"label\">Password: *</Form.Label>\n                            <Form.Control onChange={this.onPasswordChange} type=\"password\" className=\"input\" placeholder=\"Password\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicPassword\">\n                            <Form.Label className= \"label\">Confirm Password: *</Form.Label>\n                            <Form.Control type=\"password\" onChange={this.onConfirmPasswordChange} className=\"input\" placeholder=\"Confirm Password\" />\n    \n                        </Form.Group>\n    \n                        <Form.Group controlId=\"formBasicCheckbox\">\n                        <Form.Check type=\"checkbox\" label = \"Request ADA Access\" className = \"labelBox\" />\n                        </Form.Group>\n\n                        <Form.Group controlId=\"formBasicCheckbox\">\n                            <Form.Check type=\"radio\" className = \"labelBox\" label=\"Connect account with Covid Testing*\" />\n                        </Form.Group>\n                        \n                    </Form>\n                    <Button variant=\"primary\" onClick={this.signUpClick} className = \"signup-btn\">\n                        Submit!\n                    </Button>\n\n                    \n                </div>\n             </div>\n\n\n        );\n    }\n}\n\nexport default SignUp;","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/reportWebVitals.js",[],"/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/CreateClass.js",["37"],"import React, { Component } from 'react';\nimport { Container, Form, Row, Col, Button } from 'react-bootstrap';\n\nclass CreateClass extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            courseID: '',\n            building: '',\n            room: '',\n            rows: 0,\n            columns: 0\n        }\n    }\n\n    addClass = async () => {\n        const building = this.state.building;\n        const room = this.state.room;\n        const courseID = this.state.courseID;\n        \n        if (!(building && room)) {\n            return;\n        }\n\n        // make API call to get rows and cols\n        var myHeaders = new Headers();\n        myHeaders.append(\"Content-Type\", \"application/json\");\n        const URL = 'http://localhost:5000/rooms/add-class/';\n        let headers = new Headers();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json');\n        headers.append(\"Access-Control-Allow-Headers\", \"*\");\n        let body = {\n            courseID: courseID,\n            roomID: building + '-' + room,\n            timing: '08:00:00'\n        }\n        let options = {\n            method: 'POST',\n            headers: headers,\n            redirect: 'follow',\n            body: JSON.stringify(body)\n        }\n\n        let apiResponse = null;\n        await fetch(URL, options)\n        .then(data => data.json())\n        .then(data => apiResponse = data)\n        .catch(err => console.log(err));\n\n        console.log(apiResponse);\n    }\n\n    updateRowsCols = async () => {\n        const building = this.state.building;\n        const room = this.state.room;\n        console.log(building, room);\n        if (!(building && room)) {\n            return;\n        }\n\n        // make API call to get rows and cols\n        const URL = 'http://localhost:5000/rooms/dimension/' + building + '-' + room;\n        let headers = new Headers();\n        headers.append('Access-Control-Allow-Origin', '*');\n        headers.append('Content-Type', 'application/json');\n        headers.append(\"Access-Control-Allow-Headers\", \"*\");\n        let options = {\n            method: 'GET',\n            headers: headers\n        }\n\n        let apiResponse = null;\n        await fetch(URL, options)\n        .then(data => data.json())\n        .then(data => apiResponse = data)\n        .catch(err => console.log(err));\n\n        console.log(apiResponse);\n        if (apiResponse === null) {\n            return;\n        }\n\n        const length = apiResponse['length'];\n        const breadth = apiResponse['breadth'];\n\n        this.setState({\n            length: length,\n            breadth: breadth\n        });\n    }\n\n    onCourseIDChange = (e) => {\n        const courseID = e.target.value;\n        this.setState({\n            courseID: courseID\n        });\n    }\n\n    onBuildingChange = async (e) => {\n        const building = e.currentTarget.value;\n        await this.setState({\n            building: building\n        });\n        await this.updateRowsCols();\n    }\n\n    onRoomChange = async (e) => {\n        const room = e.currentTarget.value;\n        await this.setState({\n            room: room\n        });\n        await this.updateRowsCols();\n    }\n\n    onRowsChange = (e) => {\n        const rows = e.target.value;\n        this.setState({\n            rows: rows\n        });\n    }\n\n    onColsChange = (e) => {\n        const cols = e.target.value;\n        this.setState({\n            cols: cols\n        });\n    }\n\n    render() {\n        return (\n            <Container>\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Course ID</Form.Label>\n                        <Form.Control onChange={this.onCourseIDChange} type=\"text\" placeholder=\"Course ID (ex. CS 101)\" />\n                    </Form.Group>\n                    <Form.Row>\n                        <Col>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Select Building</Form.Label>\n                                <Form.Control onChange={this.onBuildingChange} as=\"select\">\n                                    <option>Clough Undergraduate Learning Commons</option>\n                                    <option>College of Computing</option>\n                                    <option>Instructional Center</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group controlId=\"exampleForm.ControlSelect1\">\n                                <Form.Label>Select Room</Form.Label>\n                                <Form.Control onChange={this.onRoomChange} as=\"select\">\n                                    <option>101</option>\n                                    <option>220</option>\n                                    <option>305</option>\n                                    <option>332</option>\n                                </Form.Control>\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                    <Form.Row>\n                        <Col>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Number of Rows</Form.Label>\n                                <Form.Control onChange={this.onRowsChange} value={this.state.length} type=\"text\" placeholder=\"10\" />\n                            </Form.Group>\n                        </Col>\n                        <Col>\n                            <Form.Group controlId=\"formBasicPassword\">\n                                <Form.Label>Number of Seats/Row</Form.Label>\n                                <Form.Control onChange={this.onColsChange} value={this.state.breadth} type=\"text\" placeholder=\"20\" />\n                            </Form.Group>\n                        </Col>\n                    </Form.Row>\n                </Form>\n                <Button onClick={this.addClass} >\n                    Add Class\n                </Button>\n            </Container>\n        )\n    }\n}\n\nexport default CreateClass;","/Users/devanshjatinponda/Desktop/Projects/GTEM-Hackathon/frontend/src/components/Main.js",["38"],{"ruleId":"39","severity":1,"message":"40","line":22,"column":13,"nodeType":"41","messageId":"42","endLine":22,"endColumn":17},{"ruleId":"43","severity":1,"message":"44","line":68,"column":1,"nodeType":"45","endLine":68,"endColumn":15},{"ruleId":"46","replacedBy":"47"},{"ruleId":"48","replacedBy":"49"},{"ruleId":"39","severity":1,"message":"50","line":1,"column":8,"nodeType":"41","messageId":"42","endLine":1,"endColumn":12},{"ruleId":"43","severity":1,"message":"44","line":99,"column":13,"nodeType":"45","endLine":99,"endColumn":27},{"ruleId":"39","severity":1,"message":"51","line":2,"column":27,"nodeType":"41","messageId":"42","endLine":2,"endColumn":30},{"ruleId":"52","severity":1,"message":"53","line":7,"column":5,"nodeType":"54","messageId":"55","endLine":9,"endColumn":6},"no-unused-vars","'body' is assigned a value but never used.","Identifier","unusedVar","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["56"],"no-negated-in-lhs",["57"],"'logo' is defined but never used.","'Row' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]